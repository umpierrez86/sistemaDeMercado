/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MenuPrincipal;

import Dominio.EleccionDeInicio;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;

/**
 *
 * @author Luciano Umpierrez
 */
public class RecuperarDatos extends javax.swing.JFrame {

    /**
     * Creates new form RecuperarDatos
     */
    public RecuperarDatos(EleccionDeInicio unaEleccionDeInicio, MenuPrincipal unMenu) {
        initComponents();
        this.setTitle("Recuperacón de datos");
        ButtonGroup grupoBotones = new ButtonGroup();
        grupoBotones.add(this.btnVacio);
        grupoBotones.add(this.btnCargarDatos);
        grupoBotones.add(this.btnRecuperar);
        this.eleccion = unaEleccionDeInicio;
        this.menu = unMenu;
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                eleccion.setEleccion("");
            }
        });
    }

    // Verificar que los archivos existan
    public boolean verificarExistenciaArchivo(String ruta) {
        boolean existe = false;

        Path pathArchivo = Paths.get(ruta);

        if (Files.exists(pathArchivo)) {
            existe = true;
        }

        return existe;

    }

    public void mostrarError(String mensaje) {
        JOptionPane.showMessageDialog(this,
                mensaje, "Error", JOptionPane.ERROR_MESSAGE);
    }

    public boolean verificarSeleccion() throws FileNotFoundException, IOException {
        boolean opcionValida = false;
        if (btnCargarDatos.isSelected()) {
            if (verificarExistenciaArchivo("./ImagenesOblig/productos.txt")) {
                File archivo = new File("./ImagenesOblig/productos.txt");
                // Verificar que el archivo no este vacío
                if (!(archivo.length() == 0)) {
                    opcionValida = true;
                    this.eleccion.setEleccion("Cargar");
                } else {
                    mostrarError("El arhivo productos.txt, de donde cargar los datos, "
                            + "se encuntra vacio, seleccione otra opción");
                }
            } else {
                mostrarError("No existe un arhivo productos.txt de donde cargar los datos, "
                        + "seleccione otra opción");
            }
        } else if (btnRecuperar.isSelected()) {
            if (verificarExistenciaArchivo("./salida.ser")) {
                FileInputStream ff = new FileInputStream("salida.ser");
                BufferedInputStream bb = new BufferedInputStream(ff);
                ObjectInputStream in = new ObjectInputStream(bb);
                // Verificar que al menos haya un objeto para recuperar
                try {
                    in.readObject();
                    opcionValida = true;
                    this.eleccion.setEleccion("Recuperar");
                } catch (IOException | ClassNotFoundException e) {
                    mostrarError("El arhivo de la sesion anterior, "
                            + "esta vacio, seleccione otra opción");
                }
                in.close();
            } else {
                mostrarError("No existe un arhivo de la sesion anterior, "
                        + "seleccione otra opción");
            }
        } else {
            this.eleccion.setEleccion("Vacio");
            opcionValida = true;
        }
        this.btnCargarDatos.setSelected(false);

        return opcionValida;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPanel = new javax.swing.JPanel();
        btnRecuperar = new javax.swing.JRadioButton();
        btnVacio = new javax.swing.JRadioButton();
        btnCargarDatos = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnRecuperar.setText("Recuperar datos");

        btnVacio.setText("Comenzar sin datos");

        btnCargarDatos.setText("Cargar datos");
        btnCargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarDatosActionPerformed(evt);
            }
        });

        jButton1.setText("Aplicar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPanelLayout = new javax.swing.GroupLayout(pnlPanel);
        pnlPanel.setLayout(pnlPanelLayout);
        pnlPanelLayout.setHorizontalGroup(
            pnlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPanelLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(pnlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(pnlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnVacio)
                        .addComponent(btnRecuperar)
                        .addComponent(btnCargarDatos)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        pnlPanelLayout.setVerticalGroup(
            pnlPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(btnRecuperar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnVacio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCargarDatos)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        setBounds(0, 0, 265, 210);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean opcionValida = false;
        try {
            opcionValida = verificarSeleccion();
        } catch (IOException ex) {
            mostrarError("No fue posible traer los datos");
        }
        if (opcionValida) {
            dispose();
            menu.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnCargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarDatosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCargarDatosActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton btnCargarDatos;
    private javax.swing.JRadioButton btnRecuperar;
    private javax.swing.JRadioButton btnVacio;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel pnlPanel;
    // End of variables declaration//GEN-END:variables
    private EleccionDeInicio eleccion;
    private MenuPrincipal menu;
}
